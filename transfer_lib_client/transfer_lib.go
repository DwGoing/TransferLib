// Code generated by goctl. DO NOT EDIT.
// Source: transfer_lib.proto

package transfer_lib_client

import (
	"context"

	"transfer_lib/transfer_lib"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Account                = transfer_lib.Account
	GetAccountRequest      = transfer_lib.GetAccountRequest
	GetAccountResponse     = transfer_lib.GetAccountResponse
	GetBalanceRequest      = transfer_lib.GetBalanceRequest
	GetBalanceResponse     = transfer_lib.GetBalanceResponse
	GetTranscationRequest  = transfer_lib.GetTranscationRequest
	GetTranscationResponse = transfer_lib.GetTranscationResponse
	TransferRequest        = transfer_lib.TransferRequest
	TransferResponse       = transfer_lib.TransferResponse

	TransferLib interface {
		GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error)
		GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
		Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error)
		GetTranscation(ctx context.Context, in *GetTranscationRequest, opts ...grpc.CallOption) (*GetTranscationResponse, error)
	}

	defaultTransferLib struct {
		cli zrpc.Client
	}
)

func NewTransferLib(cli zrpc.Client) TransferLib {
	return &defaultTransferLib{
		cli: cli,
	}
}

func (m *defaultTransferLib) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error) {
	client := transfer_lib.NewTransferLibClient(m.cli.Conn())
	return client.GetAccount(ctx, in, opts...)
}

func (m *defaultTransferLib) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	client := transfer_lib.NewTransferLibClient(m.cli.Conn())
	return client.GetBalance(ctx, in, opts...)
}

func (m *defaultTransferLib) Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error) {
	client := transfer_lib.NewTransferLibClient(m.cli.Conn())
	return client.Transfer(ctx, in, opts...)
}

func (m *defaultTransferLib) GetTranscation(ctx context.Context, in *GetTranscationRequest, opts ...grpc.CallOption) (*GetTranscationResponse, error) {
	client := transfer_lib.NewTransferLibClient(m.cli.Conn())
	return client.GetTranscation(ctx, in, opts...)
}
